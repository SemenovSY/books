{"version":3,"sources":["Components/Modal.js","Components/BookResult.js","Components/Result.js","reportWebVitals.js","index.js"],"names":["Modal","active","setActive","content","currentBookInfo","setContent","JSON","parse","className","onClick","e","stopPropagation","id","title","author_name","publish_date","publisher","isbn","src","cover_i","alt","width","height","BookResult","res","useState","modalActive","setModalActive","modalContent","setModalContent","map","elem","idx","stringify","Result","data","setData","loading","setLoading","error","setError","result","setResult","loadingData","getData","req","a","searchString","split","join","fetch","then","response","json","docs","catch","timerId","type","placeholder","onChange","clearTimeout","searchBar","document","getElementById","value","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9541be82.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Modal.css\"\r\n\r\nfunction Modal({active, setActive, content, setContent}) {\r\n\r\n    let currentBookInfo = null;\r\n\r\n    if (content) {\r\n        currentBookInfo = JSON.parse(content);\r\n    }\r\n\r\n    return (\r\n        <div className={active ? \"modal active\" : \"modal\"} onClick={() => setActive(false)}>\r\n            <div className={active ? \"modal_result active\" : \"modal_result\"} onClick={(e) => e.stopPropagation()}>\r\n                {currentBookInfo ? <div className=\"book_info\">\r\n                                        <div id=\"currentBook_title\">\r\n                                            {currentBookInfo.title}\r\n                                        </div>\r\n                                        {currentBookInfo.author_name ? \r\n                                        <div id=\"currentBook_author\">\r\n                                            {`Author: ${currentBookInfo.author_name}`}\r\n                                        </div>:null}\r\n                                        {currentBookInfo.publish_date[0] ?\r\n                                        <div id=\"currentBook_publishDate\">\r\n                                            {`Publish Date: ${currentBookInfo.publish_date[0]}`}\r\n                                        </div>:null}\r\n                                        {currentBookInfo.publisher[0] ?  \r\n                                        <div id=\"currentBook_publisher\">\r\n                                            {`Publisher: ${currentBookInfo.publisher[0]}`}\r\n                                        </div> : null}\r\n                                        {currentBookInfo.isbn[0] ? \r\n                                        <div id=\"currentBook_isbn\">\r\n                                            {`ISBN: ${currentBookInfo.isbn[0]}`}\r\n                                        </div> : null}\r\n                                        <div id=\"currentBook_cover\">\r\n                                            <img src={`http://covers.openlibrary.org/b/id/${currentBookInfo.cover_i}-L.jpg`} alt=\"null\" width=\"100%\" height=\"100%\"></img>\r\n                                        </div>                       \r\n                                    </div> : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","import React, {useState} from 'react'\r\nimport './BookResult.css';\r\nimport Modal from './Modal';\r\n\r\nfunction BookResult({res}) {\r\n\r\n    const [modalActive, setModalActive] = useState(false)\r\n    const [modalContent, setModalContent] = useState(\"\")\r\n\r\n    return (\r\n        <div className=\"result\">\r\n            {res.map((elem, idx) => {\r\n                 return <div className=\"book\" key={idx}>\r\n                            <div id=\"cover\" onClick={() => {setModalActive(true); setModalContent(JSON.stringify(elem))}}>\r\n                                <img src={`http://covers.openlibrary.org/b/id/${elem.cover_i}-M.jpg`} alt=\"null\" width=\"200px\" height=\"310px\"></img>\r\n                            </div>\r\n                            <div id=\"title\">\r\n                                {elem.title}\r\n                            </div>\r\n                            <div id=\"description\">\r\n                                {`Author: ${elem.author_name}`}\r\n                            </div>\r\n                        </div>\r\n            })}\r\n            <Modal active={modalActive} setActive={setModalActive} content={modalContent} setContent={setModalContent}>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookResult; ","import React, {useState, useEffect} from 'react';\r\nimport './Result.css';\r\nimport './Search.css';\r\nimport BookResult from './BookResult';\r\n\r\nfunction Result() {\r\n    \r\n    const [data, setData] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    //const [search, setSearch] = useState(\"\");\r\n    const [result, setResult] = useState([]);\r\n\r\n    let loadingData = <h2>Receiving data...</h2>;\r\n    \r\n    async function getData(req) {\r\n        setLoading(true);\r\n        let searchString = req.split(\" \").join(\"+\");\r\n        fetch(`https://openlibrary.org/search.json?title=${searchString}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {setData(data); setResult(data.docs)})\r\n            .then(() => setLoading())\r\n            .catch(setError);\r\n    }\r\n\r\n    /*useEffect(() => {\r\n        setLoading(true);\r\n        fetch(\"http://openlibrary.org/search.json?author=tolkien\")\r\n            .then((response) => response.json())\r\n            .then((data) => setData(data))\r\n            .then(() => setLoading())\r\n            .catch(setError);\r\n\r\n    }, []);*/\r\n\r\n    if (loading) {\r\n        loadingData = <h2 className=\"animate\">Receiving data...</h2>;\r\n    }\r\n\r\n    if (error) {\r\n        return <pre>{JSON.stringify(error, null, 2)}</pre>\r\n    }\r\n\r\n    let resArray = data.docs;\r\n\r\n    function Search() {\r\n        let searchBar = document.getElementById(\"search-bar\");\r\n        if (searchBar.value) {\r\n            getData(searchBar.value)\r\n        }\r\n    }\r\n    let timerId = null;\r\n\r\n    function handleSearch() {\r\n        if (timerId) {\r\n            clearTimeout(timerId);\r\n        }\r\n        let searchBar = document.getElementById(\"search-bar\");\r\n        if (searchBar.value) {\r\n            timerId = setTimeout(() => getData(searchBar.value), 1000);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"search\">\r\n                <input type=\"text\" id=\"search-bar\" placeholder=\"Enter a book name\" onChange={handleSearch}></input>\r\n                <a id=\"search-button\" onClick={Search}>search</a>\r\n            </div>\r\n            {loading ?\r\n            loadingData\r\n            :\r\n            <BookResult res={result}/>\r\n            }\r\n        </div>\r\n    )\r\n\r\n    \r\n    \r\n}\r\n\r\nexport default Result;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Search from './Components/Search';\nimport Result from './Components/Result';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Result />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}